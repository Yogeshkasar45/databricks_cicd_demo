name: Update Databricks Repo on PR Merge to Master

on:
  push:
    branches:
      - main

jobs:
  update-repo:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run Databricks Repo Update Script
        run: |
          echo "
          import requests
          import json

          # Set your Databricks workspace URL and the personal access token
          DATABRICKS_URL = 'https://adb-3584557707849727.7.azuredatabricks.net'
          TOKEN = 'dapia8c3f429258bbc06a1d9abc76315579d'

          # Define the repo_id you want to update
          repo_id = 1177718681997607  # Replace with your repo ID

          # Define the new branch or tag you want to update the repo to
          new_branch_or_tag = 'main'

          # Set up the API endpoint
          endpoint = f'{DATABRICKS_URL}/api/2.0/repos/{repo_id}'

          # Prepare the payload with the new branch or tag
          payload = {
              'branch': new_branch_or_tag
          }

          # Define the headers including the authorization token
          headers = {
              'Authorization': f'Bearer {TOKEN}',
              'Content-Type': 'application/json'
          }

          # Send the PATCH request to update the repo
          response = requests.patch(endpoint, headers=headers, data=json.dumps(payload))

          # Check if the request was successful
          if response.status_code == 200:
              repo_details = response.json()
              print('Repository updated successfully:', repo_details)
          else:
              print(f'Failed to update repo: {response.status_code} - {response.text}')
          " > update_repo.py
          python update_repo.py

        
